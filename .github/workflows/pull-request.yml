name: Pull Request Workflow

on:
  pull_request:
    branches:
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  file-changes:
    name: File changes detection
    runs-on: ubuntu-latest
    timeout-minutes: 60
    outputs:
      ui: ${{ steps.changes.outputs.ui }}
      translations: ${{ steps.changes.outputs.translations }}
      backend: ${{ steps.changes.outputs.backend }}
    steps:
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            ui:
              - 'ui/**'
            translations:
              - 'ui/src/translations/**'
            backend:
              - '!{ui,.github}/**'
          token: ${{ secrets.GITHUB_TOKEN }}

  translations:
    name: 'Translations - Generate translations'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: file-changes
    steps:
        - uses: actions/checkout@v4
          name: Checkout - Current ref
          if: "needs.file-changes.outputs.translations == 'true'"

        - id: generate-translations
          name: Translations - Generate translations
          if: "needs.file-changes.outputs.translations == 'true'"
          uses: ./.github/actions/generate-translations
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
          env:
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  frontend:
    name: Frontend - Tests
    needs: [file-changes, translations]
    if: "needs.file-changes.outputs.ui == 'true'"
    uses: ./.github/workflows/workflow-frontend-test.yml
    secrets:
      GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  backend:
    name: Backend - Tests
    needs: file-changes
    if: "needs.file-changes.outputs.backend == 'true'"
    uses: ./.github/workflows/workflow-backend-test.yml
    secrets:
      GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

  end:
    name: End
    runs-on: ubuntu-latest
    if: always()
    needs: [frontend, backend]
    steps:
      # Slack
      - name: Slack notification
        uses: Gamesight/slack-workflow-status@master
        if: ${{ always() && env.SLACK_WEBHOOK_URL != 0 }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          name: GitHub Actions
          icon_emoji: ":github-actions:"
          channel: "C02DQ1A7JLR"